<?xml version="1.0" encoding="UTF-8"?>
<!-- status=debug 可以查看log4j的装配过程,默认off -->
<!--monitorInterval="1800" 指log4j2每隔1800秒（半小时），自动监控该配置文件是否有变化，如果变化，则自动根据文件内容重新配置-->
<configuration status="off" monitorInterval="1800">
    <!-- 定义接下来使用的变量 -->
    <properties>
        <property name="LOG_HOME">/tmp/logs</property>
        <property name="SERVER_NAME">store-web</property>
        <property name="FILE_NAME">store</property>
        <property name="PAY_GATEWAY_LOG">store_pay</property>
        <!-- 日志备份目录 -->
        <property name="BACKUP_HOME">${LOG_HOME}/${SERVER_NAME}/backup</property>
    </properties>

    <!-- 先定义所有的appender -->
    <appenders>
        <!-- 定义控制台输出 -->
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息，%n是换行符-->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
        </Console>

        <!-- 程序员调试日志 -->
        <RollingRandomAccessFile name="DevLog" fileName="${LOG_HOME}/${SERVER_NAME}/${FILE_NAME}.log"
                                 filePattern="${LOG_HOME}/${SERVER_NAME}/${FILE_NAME}.%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
            <Policies>
                <!-- TimeBasedTriggeringPolicy 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作。有两个参数:
                    interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟
                    modulate，boolean型，说明是否对封存时间进行调制。若modulate=true，则封存时间将以0点为边界进行偏移计算。比如，modulate=true，interval=4hours，那么假设上次封存日志的时间为03:00，则下次封存日志的时间为04:00，之后的封存时间依次为08:00，12:00，16:00，。。。
                -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>

        <!-- 支付网关日志记录 -->
        <RollingRandomAccessFile name="pay_gateway_log" fileName="${LOG_HOME}/${SERVER_NAME}/${PAY_GATEWAY_LOG}.log"
                                 filePattern="${BACKUP_HOME}/${PAY_GATEWAY_LOG}-%d{yyyy-MM}-%i.log.gz">
            <PatternLayout
                    pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
            <Policies>
                <!--（表示单个文件最大多少容量）结合在一起，非常有用，以这段配置为例，当单个文件达到10M后，会自动将以前的内容，先创建类似 2014-09（年-月）的目录，然后按 "xxx-年-月-日-序号"命名，打成压缩包-->
                <SizeBasedTriggeringPolicy size="10 MB" />
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <!--表示压缩包，最多保留20个-->
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>

        <!-- log4jjdbc2 日志 -->
        <File name="log4jdbc_file" fileName="${LOG_HOME}/${SERVER_NAME}/log4jdbc.out">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %level - %m%n%ex%n"/>
        </File>
    </appenders>

    <loggers>
        <!-- Root Logger -->
        <root level="info">
            <appender-ref ref="Console" />
        </root>
        <!-- 项目日志配置 -->
        <logger name="com.bluejean.store" level="info" additivity="false">
            <appender-ref ref="DevLog" />
        </logger>

        <logger name="log4jdbc.log4j2" level="info" additivity="false">
            <!--<MarkerFilter marker="LOG4JDBC_NON_STATEMENT" onMatch="DENY" onMismatch="NEUTRAL" />-->
            <MarkerFilter marker="LOG4JDBC_JDBC" onMatch="DENY" onMismatch="NEUTRAL" />
            <appender-ref ref="DevLog" />
            <!--<appender-ref ref="log4jdbc_file" />-->
        </logger>

        <!-- 支付网关日志 -->
        <logger name="PAY_GATEWAY_LOG" level="info" additivity="false">
            <appender-ref ref="pay_gateway_log"/>
        </logger>

        <!-- 3rdparty Loggers -->
        <logger name="org.springframework.web" level="info" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
        <logger name="org.apache.shiro" level="info" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
        <logger name="org.apache.http" level="warn"/>
    </loggers>
</configuration>